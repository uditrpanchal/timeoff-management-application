stages:
- app-build
- app-image-build
- app-deploy

variables:
    APP_NAME: "timeoff-management-app"
    APP_VERSION: $CI_PIPELINE_IID
    KUBECTL_VERSION: "v1.22.0"

build-nodejs-app:
    stage: app-build
    image: node:18.12.1
    script:
        - node -v
        - npm -v
        - npm cache clean --force
        - npm install
        - echo $CI_PIPELINE_IID
    artifacts:
        paths:
            - node_modules/

build-docker-image:
    stage: app-image-build
    only:
        - master
    image: docker:20.10.12
    services:
        - docker:20.10.12-dind
    script:
        - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin
        - docker build -t docker.io/uditrpanchal/timeoff-management:latest -t docker.io/uditrpanchal/timeoff-management:$APP_VERSION .
        - docker image ls
        - docker push --all-tags docker.io/uditrpanchal/timeoff-management

deploy to EKS:
    stage: app-deploy
    only:
        - master
    image:
        name: uditrpanchal/aws-helm:test2
        entrypoint: [""]
    before_script:
        - export AWS_PROFILE=${AWS_PROFILE}
        - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        - export KUBECONFIG=${KUBECONFIG}
        - export KUBE_CONFIG_DATA=${KUBECONFIG}
        - export AWS_PROFILE=${AWS_PROFILE}
    script: 
        - aws --version
        - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
        - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
        - aws configure set region us-east-1
        - aws sts get-caller-identity
        - aws eks --region us-east-1 update-kubeconfig --name eks
        - kubectl get namespaces 
        - kubectl apply -k kubernetes/overlays/prod

