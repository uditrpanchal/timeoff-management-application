stages:
- app-build
- app-image-build
- app-deploy

variables:
    APP_NAME: "timeoff-management-app"
    APP_VERSION: $CI_PIPELINE_IID
    KUBECTL_VERSION: "v1.22.0"

# build-nodejs-app:
#     stage: app-build
#     image: node:18.12.1
#     script:
#         - node -v
#         - npm -v
#         - npm cache clean --force
#         - npm install
#         - echo $CI_PIPELINE_IID
#     artifacts:
#         paths:
#             - node_modules/

# build-docker-image:
#     stage: app-image-build
#     image: docker:20.10.12
#     services:
#         - docker:20.10.12-dind
#     script:
#         - echo $CI_REGISTRY_PASSWORD | docker login -u $CI_REGISTRY_USER --password-stdin
#         - docker build -t docker.io/uditrpanchal/timeoff-management:latest -t docker.io/uditrpanchal/timeoff-management:$APP_VERSION .
#         - docker image ls
#         - docker push --all-tags docker.io/uditrpanchal/timeoff-management

deploy to EKS:
    stage: app-deploy
    image:
        name: alpine/helm
        entrypoint: [""]
    before_script:
        - export AWS_PROFILE=${AWS_PROFILE}
        - export AWS_ACCESS_KEY_ID=${AWS_ACCESS_KEY_ID}
        - export AWS_SECRET_ACCESS_KEY=${AWS_SECRET_ACCESS_KEY}
        - export AWS_DEFAULT_REGION=${AWS_DEFAULT_REGION}
        - export KUBE_CONFIG_DATA=${KUBECONFIG}
        # - export AWS_PROFILE > ~/.aws/credentials
#      - aws eks --region us-east-1 update-kubeconfig --name eks --profile gitlab
    script: 
        - pwd
        - ls -al
        - apk add --no-cache python3 py3-pip && pip3 install --upgrade pip  && pip3 install awscli 
        - kubectl get namespaces 
#        - aws eks --region us-east-1 update-kubeconfig --name eks --profile gitlab
        - pwd
        - ls -al

